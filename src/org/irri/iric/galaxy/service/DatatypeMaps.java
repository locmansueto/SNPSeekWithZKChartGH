package org.irri.iric.galaxy.service;

import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

public class DatatypeMaps {

	  private static Map[] mapAll;
	  
	  public static Map[] getDatatypes() {
		  
		  if(mapAll!=null) return mapAll;
		
		  Map<String,String> mapExt2Class=new TreeMap();
		  Map<String,String> mapClass2Ext=new TreeMap();
		  Map<String,String> mapDat2Class=new TreeMap();
		  Map<String,String> mapClass2Dat=new TreeMap();
		  Map<String,String> mapClass2For=new TreeMap();
		  Map<String,String> mapFor2Class=new TreeMap();
		  Map<String,String> mapClass2Class=new TreeMap();
		  
		  mapAll=new Map[] {mapClass2Dat, mapDat2Class, mapClass2For, mapFor2Class, mapClass2Ext, mapExt2Class,mapClass2Class};
		  mapExt2Class.put("snaphmm","SnapHmm(Text)");   mapClass2Ext.put("SnapHmm(Text)","snaphmm");
		  mapDat2Class.put("data_1364","SnapHmm(Text)");   mapClass2Dat.put("SnapHmm(Text)","data_1364");
		  mapExt2Class.put("augustus","Augustus(CompressedArchive)");   mapClass2Ext.put("Augustus(CompressedArchive)","augustus");
		  mapDat2Class.put("data_0950","Augustus(CompressedArchive)");   mapClass2Dat.put("Augustus(CompressedArchive)","data_0950");
		  mapExt2Class.put("anvio_composite","AnvioComposite(Html)");   mapClass2Ext.put("AnvioComposite(Html)","anvio_composite");
		  mapExt2Class.put("anvio_db","AnvioDB(AnvioComposite)");   mapClass2Ext.put("AnvioDB(AnvioComposite)","anvio_db");
		  mapExt2Class.put("anvio_structure_db","AnvioStructureDB(AnvioDB)");   mapClass2Ext.put("AnvioStructureDB(AnvioDB)","anvio_structure_db");
		  mapExt2Class.put("anvio_genomes_db","AnvioGenomesDB(AnvioDB)");   mapClass2Ext.put("AnvioGenomesDB(AnvioDB)","anvio_genomes_db");
		  mapExt2Class.put("anvio_contigs_db","AnvioContigsDB(AnvioDB)");   mapClass2Ext.put("AnvioContigsDB(AnvioDB)","anvio_contigs_db");
		  mapExt2Class.put("anvio_profile_db","AnvioProfileDB(AnvioDB)");   mapClass2Ext.put("AnvioProfileDB(AnvioDB)","anvio_profile_db");
		  mapExt2Class.put("anvio_pan_db","AnvioPanDB(AnvioDB)");   mapClass2Ext.put("AnvioPanDB(AnvioDB)","anvio_pan_db");
		  mapExt2Class.put("anvio_samples_db","AnvioSamplesDB(AnvioDB)");   mapClass2Ext.put("AnvioSamplesDB(AnvioDB)","anvio_samples_db");
		  mapDat2Class.put("data_0925","Amos(data.Text)");   mapClass2Dat.put("Amos(data.Text)","data_0925");
		  mapFor2Class.put("format_3582","Amos(data.Text)");   mapClass2For.put("Amos(data.Text)","format_3582");
		  mapExt2Class.put("afg","Amos(data.Text)");   mapClass2Ext.put("Amos(data.Text)","afg");
		  mapDat2Class.put("data_0925","Sequences(sequence.Fasta)");   mapClass2Dat.put("Sequences(sequence.Fasta)","data_0925");
		  mapExt2Class.put("sequences","Sequences(sequence.Fasta)");   mapClass2Ext.put("Sequences(sequence.Fasta)","sequences");
		  mapFor2Class.put("format_2561","Roadmaps(data.Text)");   mapClass2For.put("Roadmaps(data.Text)","format_2561");
		  mapExt2Class.put("roadmaps","Roadmaps(data.Text)");   mapClass2Ext.put("Roadmaps(data.Text)","roadmaps");
		  mapExt2Class.put("velvet","Velvet(Html)");   mapClass2Ext.put("Velvet(Html)","velvet");
		  mapFor2Class.put("format_2333","Binary(data.Data)");   mapClass2For.put("Binary(data.Data)","format_2333");
		  mapExt2Class.put("ab1","Ab1(Binary)");   mapClass2Ext.put("Ab1(Binary)","ab1");
		  mapFor2Class.put("format_3000","Ab1(Binary)");   mapClass2For.put("Ab1(Binary)","format_3000");
		  mapDat2Class.put("data_0924","Ab1(Binary)");   mapClass2Dat.put("Ab1(Binary)","data_0924");
		  mapExt2Class.put("idat","Idat(Binary)");   mapClass2Ext.put("Idat(Binary)","idat");
		  mapFor2Class.put("format_2058","Idat(Binary)");   mapClass2For.put("Idat(Binary)","format_2058");
		  mapDat2Class.put("data_2603","Idat(Binary)");   mapClass2Dat.put("Idat(Binary)","data_2603");
		  mapExt2Class.put("cel","Cel(Binary)");   mapClass2Ext.put("Cel(Binary)","cel");
		  mapFor2Class.put("format_1638","Cel(Binary)");   mapClass2For.put("Cel(Binary)","format_1638");
		  mapDat2Class.put("data_3110","Cel(Binary)");   mapClass2Dat.put("Cel(Binary)","data_3110");
		  mapExt2Class.put("msh","MashSketch(Binary)");   mapClass2Ext.put("MashSketch(Binary)","msh");
		  mapExt2Class.put("compressed_archive","CompressedArchive(Binary)");   mapClass2Ext.put("CompressedArchive(Binary)","compressed_archive");
		  mapExt2Class.put("zip","CompressedZipArchive(CompressedArchive)");   mapClass2Ext.put("CompressedZipArchive(CompressedArchive)","zip");
		  mapExt2Class.put("asn1-binary","GenericAsn1Binary(Binary)");   mapClass2Ext.put("GenericAsn1Binary(Binary)","asn1-binary");
		  mapFor2Class.put("format_1966","GenericAsn1Binary(Binary)");   mapClass2For.put("GenericAsn1Binary(Binary)","format_1966");
		  mapDat2Class.put("data_0849","GenericAsn1Binary(Binary)");   mapClass2Dat.put("GenericAsn1Binary(Binary)","data_0849");
		  mapFor2Class.put("format_2572","BamNative(CompressedArchive)");   mapClass2For.put("BamNative(CompressedArchive)","format_2572");
		  mapDat2Class.put("data_0863","BamNative(CompressedArchive)");   mapClass2Dat.put("BamNative(CompressedArchive)","data_0863");
		  mapExt2Class.put("unsorted.bam","BamNative(CompressedArchive)");   mapClass2Ext.put("BamNative(CompressedArchive)","unsorted.bam");
		  mapFor2Class.put("format_2572","Bam(BamNative)");   mapClass2For.put("Bam(BamNative)","format_2572");
		  mapDat2Class.put("data_0863","Bam(BamNative)");   mapClass2Dat.put("Bam(BamNative)","data_0863");
		  mapExt2Class.put("bam","Bam(BamNative)");   mapClass2Ext.put("Bam(BamNative)","bam");
		  mapFor2Class.put("format_3826","ProBam(Bam)");   mapClass2For.put("ProBam(Bam)","format_3826");
		  mapDat2Class.put("data_0863","ProBam(Bam)");   mapClass2Dat.put("ProBam(Bam)","data_0863");
		  mapExt2Class.put("probam","ProBam(Bam)");   mapClass2Ext.put("ProBam(Bam)","probam");
		  mapExt2Class.put("qname_input_sorted.bam","BamInputSorted(BamNative)");   mapClass2Ext.put("BamInputSorted(BamNative)","qname_input_sorted.bam");
		  mapExt2Class.put("qname_sorted.bam","BamQuerynameSorted(BamInputSorted)");   mapClass2Ext.put("BamQuerynameSorted(BamInputSorted)","qname_sorted.bam");
		  mapExt2Class.put("cram","CRAM(Binary)");   mapClass2Ext.put("CRAM(Binary)","cram");
		  mapFor2Class.put("format_3462","CRAM(Binary)");   mapClass2For.put("CRAM(Binary)","format_3462");
		  mapDat2Class.put("format_0863","CRAM(Binary)");   mapClass2Dat.put("CRAM(Binary)","format_0863");
		  mapFor2Class.put("format_3020","BaseBcf(CompressedArchive)");   mapClass2For.put("BaseBcf(CompressedArchive)","format_3020");
		  mapDat2Class.put("data_3498","BaseBcf(CompressedArchive)");   mapClass2Dat.put("BaseBcf(CompressedArchive)","data_3498");
		  mapExt2Class.put("bcf","Bcf(BaseBcf)");   mapClass2Ext.put("Bcf(BaseBcf)","bcf");
		  mapExt2Class.put("bcf_uncompressed","BcfUncompressed(BaseBcf)");   mapClass2Ext.put("BcfUncompressed(BaseBcf)","bcf_uncompressed");
		  mapExt2Class.put("h5","H5(Binary)");   mapClass2Ext.put("H5(Binary)","h5");
		  mapFor2Class.put("format_3590","H5(Binary)");   mapClass2For.put("H5(Binary)","format_3590");
		  mapExt2Class.put("loom","Loom(H5)");   mapClass2Ext.put("Loom(H5)","loom");
		  mapFor2Class.put("format_3590","Loom(H5)");   mapClass2For.put("Loom(H5)","format_3590");
		  mapExt2Class.put("","GmxBinary(Binary)");   mapClass2Ext.put("GmxBinary(Binary)","");
		  mapExt2Class.put("trr","Trr(GmxBinary)");   mapClass2Ext.put("Trr(GmxBinary)","trr");
		  mapExt2Class.put("cpt","Cpt(GmxBinary)");   mapClass2Ext.put("Cpt(GmxBinary)","cpt");
		  mapExt2Class.put("xtc","Xtc(GmxBinary)");   mapClass2Ext.put("Xtc(GmxBinary)","xtc");
		  mapExt2Class.put("biom2","Biom2(H5)");   mapClass2Ext.put("Biom2(H5)","biom2");
		  mapFor2Class.put("format_3746","Biom2(H5)");   mapClass2For.put("Biom2(H5)","format_3746");
		  mapExt2Class.put("cool","Cool(H5)");   mapClass2Ext.put("Cool(H5)","cool");
		  mapFor2Class.put("format_1632","Scf(Binary)");   mapClass2For.put("Scf(Binary)","format_1632");
		  mapDat2Class.put("data_0924","Scf(Binary)");   mapClass2Dat.put("Scf(Binary)","data_0924");
		  mapExt2Class.put("scf","Scf(Binary)");   mapClass2Ext.put("Scf(Binary)","scf");
		  mapFor2Class.put("format_3284","Sff(Binary)");   mapClass2For.put("Sff(Binary)","format_3284");
		  mapDat2Class.put("data_0924","Sff(Binary)");   mapClass2Dat.put("Sff(Binary)","data_0924");
		  mapExt2Class.put("sff","Sff(Binary)");   mapClass2Ext.put("Sff(Binary)","sff");
		  mapFor2Class.put("format_3006","BigWig(Binary)");   mapClass2For.put("BigWig(Binary)","format_3006");
		  mapDat2Class.put("data_3002","BigWig(Binary)");   mapClass2Dat.put("BigWig(Binary)","data_3002");
		  mapExt2Class.put("bigwig","BigWig(Binary)");   mapClass2Ext.put("BigWig(Binary)","bigwig");
		  mapFor2Class.put("format_3004","BigBed(BigWig)");   mapClass2For.put("BigBed(BigWig)","format_3004");
		  mapDat2Class.put("data_3002","BigBed(BigWig)");   mapClass2Dat.put("BigBed(BigWig)","data_3002");
		  mapExt2Class.put("bigbed","BigBed(BigWig)");   mapClass2Ext.put("BigBed(BigWig)","bigbed");
		  mapFor2Class.put("format_3009","TwoBit(Binary)");   mapClass2For.put("TwoBit(Binary)","format_3009");
		  mapDat2Class.put("data_0848","TwoBit(Binary)");   mapClass2Dat.put("TwoBit(Binary)","data_0848");
		  mapExt2Class.put("twobit","TwoBit(Binary)");   mapClass2Ext.put("TwoBit(Binary)","twobit");
		  mapExt2Class.put("sqlite","SQlite(Binary)");   mapClass2Ext.put("SQlite(Binary)","sqlite");
		  mapFor2Class.put("format_3621","SQlite(Binary)");   mapClass2For.put("SQlite(Binary)","format_3621");
		  mapExt2Class.put("gemini.sqlite","GeminiSQLite(SQlite)");   mapClass2Ext.put("GeminiSQLite(SQlite)","gemini.sqlite");
		  mapFor2Class.put("format_3622","GeminiSQLite(SQlite)");   mapClass2For.put("GeminiSQLite(SQlite)","format_3622");
		  mapDat2Class.put("data_3498","GeminiSQLite(SQlite)");   mapClass2Dat.put("GeminiSQLite(SQlite)","data_3498");
		  mapExt2Class.put("cuffdiff.sqlite","CuffDiffSQlite(SQlite)");   mapClass2Ext.put("CuffDiffSQlite(SQlite)","cuffdiff.sqlite");
		  mapFor2Class.put("format_3621","CuffDiffSQlite(SQlite)");   mapClass2For.put("CuffDiffSQlite(SQlite)","format_3621");
		  mapExt2Class.put("mz.sqlite","MzSQlite(SQlite)");   mapClass2Ext.put("MzSQlite(SQlite)","mz.sqlite");
		  mapExt2Class.put("blib","BlibSQlite(SQlite)");   mapClass2Ext.put("BlibSQlite(SQlite)","blib");
		  mapExt2Class.put("idpdb","IdpDB(SQlite)");   mapClass2Ext.put("IdpDB(SQlite)","idpdb");
		  mapExt2Class.put("gafa.sqlite","GAFASQLite(SQlite)");   mapClass2Ext.put("GAFASQLite(SQlite)","gafa.sqlite");
		  mapExt2Class.put("xlsx","Xlsx(Binary)");   mapClass2Ext.put("Xlsx(Binary)","xlsx");
		  mapExt2Class.put("excel.xls","ExcelXls(Binary)");   mapClass2Ext.put("ExcelXls(Binary)","excel.xls");
		  mapFor2Class.put("format_3468","ExcelXls(Binary)");   mapClass2For.put("ExcelXls(Binary)","format_3468");
		  mapExt2Class.put("sra","Sra(Binary)");   mapClass2Ext.put("Sra(Binary)","sra");
		  mapExt2Class.put("rdata","RData(Binary)");   mapClass2Ext.put("RData(Binary)","rdata");
		  mapExt2Class.put("oxlicg","OxliCountGraph(OxliBinary)");   mapClass2Ext.put("OxliCountGraph(OxliBinary)","oxlicg");
		  mapExt2Class.put("oxling","OxliNodeGraph(OxliBinary)");   mapClass2Ext.put("OxliNodeGraph(OxliBinary)","oxling");
		  mapExt2Class.put("oxlits","OxliTagSet(OxliBinary)");   mapClass2Ext.put("OxliTagSet(OxliBinary)","oxlits");
		  mapExt2Class.put("oxlist","OxliStopTags(OxliBinary)");   mapClass2Ext.put("OxliStopTags(OxliBinary)","oxlist");
		  mapExt2Class.put("oxliss","OxliSubset(OxliBinary)");   mapClass2Ext.put("OxliSubset(OxliBinary)","oxliss");
		  mapExt2Class.put("oxligl","OxliGraphLabels(OxliBinary)");   mapClass2Ext.put("OxliGraphLabels(OxliBinary)","oxligl");
		  mapExt2Class.put("postgresql","PostgresqlArchive(CompressedArchive)");   mapClass2Ext.put("PostgresqlArchive(CompressedArchive)","postgresql");
		  mapExt2Class.put("fast5.tar","Fast5Archive(CompressedArchive)");   mapClass2Ext.put("Fast5Archive(CompressedArchive)","fast5.tar");
		  mapExt2Class.put("fast5.tar.gz","Fast5ArchiveGz(Fast5Archive)");   mapClass2Ext.put("Fast5ArchiveGz(Fast5Archive)","fast5.tar.gz");
		  mapExt2Class.put("fast5.tar.bz2","Fast5ArchiveBz2(Fast5Archive)");   mapClass2Ext.put("Fast5ArchiveBz2(Fast5Archive)","fast5.tar.bz2");
		  mapExt2Class.put("searchgui_archive","SearchGuiArchive(CompressedArchive)");   mapClass2Ext.put("SearchGuiArchive(CompressedArchive)","searchgui_archive");
		  mapExt2Class.put("netcdf","NetCDF(Binary)");   mapClass2Ext.put("NetCDF(Binary)","netcdf");
		  mapFor2Class.put("format_3650","NetCDF(Binary)");   mapClass2For.put("NetCDF(Binary)","format_3650");
		  mapDat2Class.put("data_0943","NetCDF(Binary)");   mapClass2Dat.put("NetCDF(Binary)","data_0943");
		  mapExt2Class.put("dcd","Dcd(Binary)");   mapClass2Ext.put("Dcd(Binary)","dcd");
		  mapDat2Class.put("data_3842","Dcd(Binary)");   mapClass2Dat.put("Dcd(Binary)","data_3842");
		  mapExt2Class.put("vel","Vel(Binary)");   mapClass2Ext.put("Vel(Binary)","vel");
		  mapExt2Class.put("daa","DAA(Binary)");   mapClass2Ext.put("DAA(Binary)","daa");
		  mapExt2Class.put("rma6","RMA6(Binary)");   mapClass2Ext.put("RMA6(Binary)","rma6");
		  mapExt2Class.put("dmnd","DMND(Binary)");   mapClass2Ext.put("DMND(Binary)","dmnd");
		  mapExt2Class.put("icm","ICM(Binary)");   mapClass2Ext.put("ICM(Binary)","icm");
		  mapDat2Class.put("data_0950","ICM(Binary)");   mapClass2Dat.put("ICM(Binary)","data_0950");
		  mapDat2Class.put("data_2536","BafTar(CompressedArchive)");   mapClass2Dat.put("BafTar(CompressedArchive)","data_2536");
		  mapFor2Class.put("format_3712","BafTar(CompressedArchive)");   mapClass2For.put("BafTar(CompressedArchive)","format_3712");
		  mapExt2Class.put("brukerbaf.d.tar","BafTar(CompressedArchive)");   mapClass2Ext.put("BafTar(CompressedArchive)","brukerbaf.d.tar");
		  mapExt2Class.put("agilentbrukeryep.d.tar","YepTar(BafTar)");   mapClass2Ext.put("YepTar(BafTar)","agilentbrukeryep.d.tar");
		  mapExt2Class.put("brukertdf.d.tar","TdfTar(BafTar)");   mapClass2Ext.put("TdfTar(BafTar)","brukertdf.d.tar");
		  mapExt2Class.put("agilentmasshunter.d.tar","MassHunterTar(BafTar)");   mapClass2Ext.put("MassHunterTar(BafTar)","agilentmasshunter.d.tar");
		  mapExt2Class.put("watersmasslynx.raw.tar","MassLynxTar(BafTar)");   mapClass2Ext.put("MassLynxTar(BafTar)","watersmasslynx.raw.tar");
		  mapExt2Class.put("wiff.tar","WiffTar(BafTar)");   mapClass2Ext.put("WiffTar(BafTar)","wiff.tar");
		  mapExt2Class.put("blastxml","BlastXml(GenericXml)");   mapClass2Ext.put("BlastXml(GenericXml)","blastxml");
		  mapFor2Class.put("format_3331","BlastXml(GenericXml)");   mapClass2For.put("BlastXml(GenericXml)","format_3331");
		  mapDat2Class.put("data_0857","BlastXml(GenericXml)");   mapClass2Dat.put("BlastXml(GenericXml)","data_0857");
		  mapExt2Class.put("blastdbn","BlastNucDb(_BlastDb, Data)");   mapClass2Ext.put("BlastNucDb(_BlastDb, Data)","blastdbn");
		  mapExt2Class.put("blastdbp","BlastProtDb(_BlastDb, Data)");   mapClass2Ext.put("BlastProtDb(_BlastDb, Data)","blastdbp");
		  mapExt2Class.put("blastdbd","BlastDomainDb(_BlastDb, Data)");   mapClass2Ext.put("BlastDomainDb(_BlastDb, Data)","blastdbd");
		  mapExt2Class.put("len","ChromInfo(galaxy.datatypes.tabular.Tabular)");   mapClass2Ext.put("ChromInfo(galaxy.datatypes.tabular.Tabular)","len");
		  mapExt2Class.put("plyascii","PlyAscii(Ply, data.Text)");   mapClass2Ext.put("PlyAscii(Ply, data.Text)","plyascii");
		  mapExt2Class.put("plybinary","PlyBinary(Ply, Binary)");   mapClass2Ext.put("PlyBinary(Ply, Binary)","plybinary");
		  mapExt2Class.put("vtkascii","VtkAscii(Vtk, data.Text)");   mapClass2Ext.put("VtkAscii(Vtk, data.Text)","vtkascii");
		  mapExt2Class.put("vtkbinary","VtkBinary(Vtk, Binary)");   mapClass2Ext.put("VtkBinary(Vtk, Binary)","vtkbinary");
		  mapExt2Class.put("stl","STL(data.Data)");   mapClass2Ext.put("STL(data.Data)","stl");
		  mapExt2Class.put("coverage","LastzCoverage(Tabular)");   mapClass2Ext.put("LastzCoverage(Tabular)","coverage");
		  mapDat2Class.put("data_0006","Data(object)");   mapClass2Dat.put("Data(object)","data_0006");
		  mapFor2Class.put("format_1915","Data(object)");   mapClass2For.put("Data(object)","format_1915");
		  mapExt2Class.put("data","Data(object)");   mapClass2Ext.put("Data(object)","data");
		  mapFor2Class.put("format_2330","Text(Data)");   mapClass2For.put("Text(Data)","format_2330");
		  mapExt2Class.put("txt","Text(Data)");   mapClass2Ext.put("Text(Data)","txt");
		  mapDat2Class.put("data_0849","GenericAsn1(Text)");   mapClass2Dat.put("GenericAsn1(Text)","data_0849");
		  mapFor2Class.put("format_1966","GenericAsn1(Text)");   mapClass2For.put("GenericAsn1(Text)","format_1966");
		  mapExt2Class.put("asn1","GenericAsn1(Text)");   mapClass2Ext.put("GenericAsn1(Text)","asn1");
		  mapDat2Class.put("data_0872","Newick(Text)");   mapClass2Dat.put("Newick(Text)","data_0872");
		  mapFor2Class.put("format_1910","Newick(Text)");   mapClass2For.put("Newick(Text)","format_1910");
		  mapExt2Class.put("newick","Newick(Text)");   mapClass2Ext.put("Newick(Text)","newick");
		  mapDat2Class.put("data_0872","Nexus(Text)");   mapClass2Dat.put("Nexus(Text)","data_0872");
		  mapFor2Class.put("format_1912","Nexus(Text)");   mapClass2For.put("Nexus(Text)","format_1912");
		  mapExt2Class.put("nex","Nexus(Text)");   mapClass2Ext.put("Nexus(Text)","nex");
		  mapExt2Class.put("gg","GenomeGraphs(Tabular)");   mapClass2Ext.put("GenomeGraphs(Tabular)","gg");
		  mapExt2Class.put("rgTList","rgTabList(Tabular)");   mapClass2Ext.put("rgTabList(Tabular)","rgTList");
		  mapExt2Class.put("rgSList","rgSampleList(rgTabList)");   mapClass2Ext.put("rgSampleList(rgTabList)","rgSList");
		  mapExt2Class.put("rgFList","rgFeatureList(rgTabList)");   mapClass2Ext.put("rgFeatureList(rgTabList)","rgFList");
		  mapExt2Class.put("rgenetics","Rgenetics(Html)");   mapClass2Ext.put("Rgenetics(Html)","rgenetics");
		  mapExt2Class.put("snpmatrix","SNPMatrix(Rgenetics)");   mapClass2Ext.put("SNPMatrix(Rgenetics)","snpmatrix");
		  mapExt2Class.put("lped","Lped(Rgenetics)");   mapClass2Ext.put("Lped(Rgenetics)","lped");
		  mapExt2Class.put("pphe","Pphe(Rgenetics)");   mapClass2Ext.put("Pphe(Rgenetics)","pphe");
		  mapExt2Class.put("fphe","Fphe(Rgenetics)");   mapClass2Ext.put("Fphe(Rgenetics)","fphe");
		  mapExt2Class.put("phe","Phe(Rgenetics)");   mapClass2Ext.put("Phe(Rgenetics)","phe");
		  mapExt2Class.put("fped","Fped(Rgenetics)");   mapClass2Ext.put("Fped(Rgenetics)","fped");
		  mapExt2Class.put("pbed","Pbed(Rgenetics)");   mapClass2Ext.put("Pbed(Rgenetics)","pbed");
		  mapExt2Class.put("ldreduced","ldIndep(Rgenetics)");   mapClass2Ext.put("ldIndep(Rgenetics)","ldreduced");
		  mapExt2Class.put("eigenstratgeno","Eigenstratgeno(Rgenetics)");   mapClass2Ext.put("Eigenstratgeno(Rgenetics)","eigenstratgeno");
		  mapExt2Class.put("eigenstratpca","Eigenstratpca(Rgenetics)");   mapClass2Ext.put("Eigenstratpca(Rgenetics)","eigenstratpca");
		  mapExt2Class.put("snptest","Snptest(Rgenetics)");   mapClass2Ext.put("Snptest(Rgenetics)","snptest");
		  mapExt2Class.put("ideaspre","IdeasPre(Html)");   mapClass2Ext.put("IdeasPre(Html)","ideaspre");
		  mapExt2Class.put("pheno","Pheno(Tabular)");   mapClass2Ext.put("Pheno(Tabular)","pheno");
		  mapExt2Class.put("rexpbase","RexpBase(Html)");   mapClass2Ext.put("RexpBase(Html)","rexpbase");
		  mapExt2Class.put("affybatch","Affybatch(RexpBase)");   mapClass2Ext.put("Affybatch(RexpBase)","affybatch");
		  mapExt2Class.put("eset","Eset(RexpBase)");   mapClass2Ext.put("Eset(RexpBase)","eset");
		  mapExt2Class.put("malist","MAlist(RexpBase)");   mapClass2Ext.put("MAlist(RexpBase)","malist");
		  mapExt2Class.put("alohomora_gts","GenotypeMatrix(LinkageStudies)");   mapClass2Ext.put("GenotypeMatrix(LinkageStudies)","alohomora_gts");
		  mapExt2Class.put("linkage_map","MarkerMap(LinkageStudies)");   mapClass2Ext.put("MarkerMap(LinkageStudies)","linkage_map");
		  mapExt2Class.put("linkage_datain","DataIn(LinkageStudies)");   mapClass2Ext.put("DataIn(LinkageStudies)","linkage_datain");
		  mapExt2Class.put("allegro_fparam","AllegroLOD(LinkageStudies)");   mapClass2Ext.put("AllegroLOD(LinkageStudies)","allegro_fparam");
		  mapExt2Class.put("xgmml","Xgmml(xml.GenericXml)");   mapClass2Ext.put("Xgmml(xml.GenericXml)","xgmml");
		  mapExt2Class.put("sif","Sif(tabular.Tabular)");   mapClass2Ext.put("Sif(tabular.Tabular)","sif");
		  mapDat2Class.put("data_2968","Image(data.Data)");   mapClass2Dat.put("Image(data.Data)","data_2968");
		  mapFor2Class.put("format_3547","Image(data.Data)");   mapClass2For.put("Image(data.Data)","format_3547");
		  mapExt2Class.put("","Image(data.Data)");   mapClass2Ext.put("Image(data.Data)","");
		  mapFor2Class.put("format_3579","Jpg(Image)");   mapClass2For.put("Jpg(Image)","format_3579");
		  mapExt2Class.put("jpg","Jpg(Image)");   mapClass2Ext.put("Jpg(Image)","jpg");
		  mapFor2Class.put("format_3603","Png(Image)");   mapClass2For.put("Png(Image)","format_3603");
		  mapExt2Class.put("png","Png(Image)");   mapClass2Ext.put("Png(Image)","png");
		  mapFor2Class.put("format_3591","Tiff(Image)");   mapClass2For.put("Tiff(Image)","format_3591");
		  mapExt2Class.put("tiff","Tiff(Image)");   mapClass2Ext.put("Tiff(Image)","tiff");
		  mapExt2Class.put("vms","Hamamatsu(Image)");   mapClass2Ext.put("Hamamatsu(Image)","vms");
		  mapExt2Class.put("mrxs","Mirax(Image)");   mapClass2Ext.put("Mirax(Image)","mrxs");
		  mapExt2Class.put("svslide","Sakura(Image)");   mapClass2Ext.put("Sakura(Image)","svslide");
		  mapExt2Class.put("nrrd","Nrrd(Image)");   mapClass2Ext.put("Nrrd(Image)","nrrd");
		  mapFor2Class.put("format_3592","Bmp(Image)");   mapClass2For.put("Bmp(Image)","format_3592");
		  mapExt2Class.put("bmp","Bmp(Image)");   mapClass2Ext.put("Bmp(Image)","bmp");
		  mapFor2Class.put("format_3467","Gif(Image)");   mapClass2For.put("Gif(Image)","format_3467");
		  mapExt2Class.put("gif","Gif(Image)");   mapClass2Ext.put("Gif(Image)","gif");
		  mapFor2Class.put("format_3593","Im(Image)");   mapClass2For.put("Im(Image)","format_3593");
		  mapExt2Class.put("im","Im(Image)");   mapClass2Ext.put("Im(Image)","im");
		  mapFor2Class.put("format_3594","Pcd(Image)");   mapClass2For.put("Pcd(Image)","format_3594");
		  mapExt2Class.put("pcd","Pcd(Image)");   mapClass2Ext.put("Pcd(Image)","pcd");
		  mapFor2Class.put("format_3595","Pcx(Image)");   mapClass2For.put("Pcx(Image)","format_3595");
		  mapExt2Class.put("pcx","Pcx(Image)");   mapClass2Ext.put("Pcx(Image)","pcx");
		  mapFor2Class.put("format_3596","Ppm(Image)");   mapClass2For.put("Ppm(Image)","format_3596");
		  mapExt2Class.put("ppm","Ppm(Image)");   mapClass2Ext.put("Ppm(Image)","ppm");
		  mapFor2Class.put("format_3597","Psd(Image)");   mapClass2For.put("Psd(Image)","format_3597");
		  mapExt2Class.put("psd","Psd(Image)");   mapClass2Ext.put("Psd(Image)","psd");
		  mapFor2Class.put("format_3598","Xbm(Image)");   mapClass2For.put("Xbm(Image)","format_3598");
		  mapExt2Class.put("xbm","Xbm(Image)");   mapClass2Ext.put("Xbm(Image)","xbm");
		  mapFor2Class.put("format_3599","Xpm(Image)");   mapClass2For.put("Xpm(Image)","format_3599");
		  mapExt2Class.put("xpm","Xpm(Image)");   mapClass2Ext.put("Xpm(Image)","xpm");
		  mapFor2Class.put("format_3600","Rgb(Image)");   mapClass2For.put("Rgb(Image)","format_3600");
		  mapExt2Class.put("rgb","Rgb(Image)");   mapClass2Ext.put("Rgb(Image)","rgb");
		  mapFor2Class.put("format_3601","Pbm(Image)");   mapClass2For.put("Pbm(Image)","format_3601");
		  mapExt2Class.put("pbm","Pbm(Image)");   mapClass2Ext.put("Pbm(Image)","pbm");
		  mapFor2Class.put("format_3602","Pgm(Image)");   mapClass2For.put("Pgm(Image)","format_3602");
		  mapExt2Class.put("pgm","Pgm(Image)");   mapClass2Ext.put("Pgm(Image)","pgm");
		  mapFor2Class.put("format_3466","Eps(Image)");   mapClass2For.put("Eps(Image)","format_3466");
		  mapExt2Class.put("eps","Eps(Image)");   mapClass2Ext.put("Eps(Image)","eps");
		  mapFor2Class.put("format_3605","Rast(Image)");   mapClass2For.put("Rast(Image)","format_3605");
		  mapExt2Class.put("rast","Rast(Image)");   mapClass2Ext.put("Rast(Image)","rast");
		  mapFor2Class.put("format_3508","Pdf(Image)");   mapClass2For.put("Pdf(Image)","format_3508");
		  mapExt2Class.put("pdf","Pdf(Image)");   mapClass2Ext.put("Pdf(Image)","pdf");
		  mapFor2Class.put("format_3547","Gmaj(data.Data)");   mapClass2For.put("Gmaj(data.Data)","format_3547");
		  mapExt2Class.put("gmaj.zip","Gmaj(data.Data)");   mapClass2Ext.put("Gmaj(data.Data)","gmaj.zip");
		  mapExt2Class.put("laj","Laj(data.Text)");   mapClass2Ext.put("Laj(data.Text)","laj");
		  mapDat2Class.put("data_3002","Interval(Tabular)");   mapClass2Dat.put("Interval(Tabular)","data_3002");
		  mapFor2Class.put("format_3475","Interval(Tabular)");   mapClass2For.put("Interval(Tabular)","format_3475");
		  mapExt2Class.put("interval","Interval(Tabular)");   mapClass2Ext.put("Interval(Tabular)","interval");
		  mapFor2Class.put("format_3583","BedGraph(Interval)");   mapClass2For.put("BedGraph(Interval)","format_3583");
		  mapExt2Class.put("bedgraph","BedGraph(Interval)");   mapClass2Ext.put("BedGraph(Interval)","bedgraph");
		  mapFor2Class.put("format_3003","Bed(Interval)");   mapClass2For.put("Bed(Interval)","format_3003");
		  mapExt2Class.put("bed","Bed(Interval)");   mapClass2Ext.put("Bed(Interval)","bed");
		  mapFor2Class.put("format_3827","ProBed(Bed)");   mapClass2For.put("ProBed(Bed)","format_3827");
		  mapExt2Class.put("probed","ProBed(Bed)");   mapClass2Ext.put("ProBed(Bed)","probed");
		  mapFor2Class.put("format_3584","BedStrict(Bed)");   mapClass2For.put("BedStrict(Bed)","format_3584");
		  mapExt2Class.put("bedstrict","BedStrict(Bed)");   mapClass2Ext.put("BedStrict(Bed)","bedstrict");
		  mapFor2Class.put("format_3585","Bed6(BedStrict)");   mapClass2For.put("Bed6(BedStrict)","format_3585");
		  mapExt2Class.put("bed6","Bed6(BedStrict)");   mapClass2Ext.put("Bed6(BedStrict)","bed6");
		  mapFor2Class.put("format_3586","Bed12(BedStrict)");   mapClass2For.put("Bed12(BedStrict)","format_3586");
		  mapExt2Class.put("bed12","Bed12(BedStrict)");   mapClass2Ext.put("Bed12(BedStrict)","bed12");
		  mapDat2Class.put("data_1255","Gff(Tabular, _RemoteCallMixin)");   mapClass2Dat.put("Gff(Tabular, _RemoteCallMixin)","data_1255");
		  mapFor2Class.put("format_2305","Gff(Tabular, _RemoteCallMixin)");   mapClass2For.put("Gff(Tabular, _RemoteCallMixin)","format_2305");
		  mapExt2Class.put("gff","Gff(Tabular, _RemoteCallMixin)");   mapClass2Ext.put("Gff(Tabular, _RemoteCallMixin)","gff");
		  mapFor2Class.put("format_1975","Gff3(Gff)");   mapClass2For.put("Gff3(Gff)","format_1975");
		  mapExt2Class.put("gff3","Gff3(Gff)");   mapClass2Ext.put("Gff3(Gff)","gff3");
		  mapFor2Class.put("format_2306","Gtf(Gff)");   mapClass2For.put("Gtf(Gff)","format_2306");
		  mapExt2Class.put("gtf","Gtf(Gff)");   mapClass2Ext.put("Gtf(Gff)","gtf");
		  mapFor2Class.put("format_3005","Wiggle(Tabular, _RemoteCallMixin)");   mapClass2For.put("Wiggle(Tabular, _RemoteCallMixin)","format_3005");
		  mapExt2Class.put("wig","Wiggle(Tabular, _RemoteCallMixin)");   mapClass2Ext.put("Wiggle(Tabular, _RemoteCallMixin)","wig");
		  mapFor2Class.put("format_3588","CustomTrack(Tabular)");   mapClass2For.put("CustomTrack(Tabular)","format_3588");
		  mapExt2Class.put("customtrack","CustomTrack(Tabular)");   mapClass2Ext.put("CustomTrack(Tabular)","customtrack");
		  mapFor2Class.put("format_3612","ENCODEPeak(Interval)");   mapClass2For.put("ENCODEPeak(Interval)","format_3612");
		  mapExt2Class.put("encodepeak","ENCODEPeak(Interval)");   mapClass2Ext.put("ENCODEPeak(Interval)","encodepeak");
		  mapExt2Class.put("chrint","ChromatinInteractions(Interval)");   mapClass2Ext.put("ChromatinInteractions(Interval)","chrint");
		  mapExt2Class.put("scidx","ScIdx(Tabular)");   mapClass2Ext.put("ScIdx(Tabular)","scidx");
		  mapExt2Class.put("isa-tab","IsaTab(_Isa)");   mapClass2Ext.put("IsaTab(_Isa)","isa-tab");
		  mapExt2Class.put("isa-json","IsaJson(_Isa)");   mapClass2Ext.put("IsaJson(_Isa)","isa-json");
		  mapExt2Class.put("mol","MOL(GenericMolFile)");   mapClass2Ext.put("MOL(GenericMolFile)","mol");
		  mapExt2Class.put("sdf","SDF(GenericMolFile)");   mapClass2Ext.put("SDF(GenericMolFile)","sdf");
		  mapExt2Class.put("mol2","MOL2(GenericMolFile)");   mapClass2Ext.put("MOL2(GenericMolFile)","mol2");
		  mapExt2Class.put("fps","FPS(GenericMolFile)");   mapClass2Ext.put("FPS(GenericMolFile)","fps");
		  mapExt2Class.put("obfs","OBFS(Binary)");   mapClass2Ext.put("OBFS(Binary)","obfs");
		  mapExt2Class.put("drf","DRF(GenericMolFile)");   mapClass2Ext.put("DRF(GenericMolFile)","drf");
		  mapExt2Class.put("phar","PHAR(GenericMolFile)");   mapClass2Ext.put("PHAR(GenericMolFile)","phar");
		  mapExt2Class.put("pdb","PDB(GenericMolFile)");   mapClass2Ext.put("PDB(GenericMolFile)","pdb");
		  mapExt2Class.put("pdbqt","PDBQT(GenericMolFile)");   mapClass2Ext.put("PDBQT(GenericMolFile)","pdbqt");
		  mapExt2Class.put("pqr","PQR(GenericMolFile)");   mapClass2Ext.put("PQR(GenericMolFile)","pqr");
		  mapExt2Class.put("grd","grd(data.Text)");   mapClass2Ext.put("grd(data.Text)","grd");
		  mapExt2Class.put("grd.tgz","grdtgz(Binary)");   mapClass2Ext.put("grdtgz(Binary)","grd.tgz");
		  mapExt2Class.put("inchi","InChI(Tabular)");   mapClass2Ext.put("InChI(Tabular)","inchi");
		  mapExt2Class.put("smi","SMILES(Tabular)");   mapClass2Ext.put("SMILES(Tabular)","smi");
		  mapExt2Class.put("cml","CML(GenericXml)");   mapClass2Ext.put("CML(GenericXml)","cml");
		  mapExt2Class.put("mothur.otu","Otu(Text)");   mapClass2Ext.put("Otu(Text)","mothur.otu");
		  mapExt2Class.put("mothur.sabund","Sabund(Otu)");   mapClass2Ext.put("Sabund(Otu)","mothur.sabund");
		  mapExt2Class.put("mothur.shared","GroupAbund(Otu)");   mapClass2Ext.put("GroupAbund(Otu)","mothur.shared");
		  mapExt2Class.put("mothur.map","SecondaryStructureMap(Tabular)");   mapClass2Ext.put("SecondaryStructureMap(Tabular)","mothur.map");
		  mapExt2Class.put("mothur.align.check","AlignCheck(Tabular)");   mapClass2Ext.put("AlignCheck(Tabular)","mothur.align.check");
		  mapExt2Class.put("mothur.align.report","AlignReport(Tabular)");   mapClass2Ext.put("AlignReport(Tabular)","mothur.align.report");
		  mapExt2Class.put("mothur.dist","DistanceMatrix(Text)");   mapClass2Ext.put("DistanceMatrix(Text)","mothur.dist");
		  mapExt2Class.put("mothur.lower.dist","LowerTriangleDistanceMatrix(DistanceMatrix)");   mapClass2Ext.put("LowerTriangleDistanceMatrix(DistanceMatrix)","mothur.lower.dist");
		  mapExt2Class.put("mothur.square.dist","SquareDistanceMatrix(DistanceMatrix)");   mapClass2Ext.put("SquareDistanceMatrix(DistanceMatrix)","mothur.square.dist");
		  mapExt2Class.put("mothur.pair.dist","PairwiseDistanceMatrix(DistanceMatrix, Tabular)");   mapClass2Ext.put("PairwiseDistanceMatrix(DistanceMatrix, Tabular)","mothur.pair.dist");
		  mapExt2Class.put("mothur.names","Names(Tabular)");   mapClass2Ext.put("Names(Tabular)","mothur.names");
		  mapExt2Class.put("mothur.summary","Summary(Tabular)");   mapClass2Ext.put("Summary(Tabular)","mothur.summary");
		  mapExt2Class.put("mothur.groups","Group(Tabular)");   mapClass2Ext.put("Group(Tabular)","mothur.groups");
		  mapExt2Class.put("mothur.accnos","AccNos(Tabular)");   mapClass2Ext.put("AccNos(Tabular)","mothur.accnos");
		  mapExt2Class.put("mothur.oligos","Oligos(Text)");   mapClass2Ext.put("Oligos(Text)","mothur.oligos");
		  mapExt2Class.put("mothur.freq","Frequency(Tabular)");   mapClass2Ext.put("Frequency(Tabular)","mothur.freq");
		  mapExt2Class.put("mothur.quan","Quantile(Tabular)");   mapClass2Ext.put("Quantile(Tabular)","mothur.quan");
		  mapExt2Class.put("mothur.filter","LaneMask(Text)");   mapClass2Ext.put("LaneMask(Text)","mothur.filter");
		  mapExt2Class.put("mothur.count_table","CountTable(Tabular)");   mapClass2Ext.put("CountTable(Tabular)","mothur.count_table");
		  mapExt2Class.put("mothur.ref.taxonomy","RefTaxonomy(Tabular)");   mapClass2Ext.put("RefTaxonomy(Tabular)","mothur.ref.taxonomy");
		  mapExt2Class.put("mothur.cons.taxonomy","ConsensusTaxonomy(Tabular)");   mapClass2Ext.put("ConsensusTaxonomy(Tabular)","mothur.cons.taxonomy");
		  mapExt2Class.put("mothur.tax.summary","TaxonomySummary(Tabular)");   mapClass2Ext.put("TaxonomySummary(Tabular)","mothur.tax.summary");
		  mapExt2Class.put("mothur.axes","Axes(Tabular)");   mapClass2Ext.put("Axes(Tabular)","mothur.axes");
		  mapExt2Class.put("mothur.sff.flow","SffFlow(Tabular)");   mapClass2Ext.put("SffFlow(Tabular)","mothur.sff.flow");
		  mapExt2Class.put("cm","InfernalCM(Text)");   mapClass2Ext.put("InfernalCM(Text)","cm");
		  mapDat2Class.put("data_1364","Hmmer(Text)");   mapClass2Dat.put("Hmmer(Text)","data_1364");
		  mapFor2Class.put("format_1370","Hmmer(Text)");   mapClass2For.put("Hmmer(Text)","format_1370");
		  mapFor2Class.put("format_3328","Hmmer2(Hmmer)");   mapClass2For.put("Hmmer2(Hmmer)","format_3328");
		  mapExt2Class.put("hmm2","Hmmer2(Hmmer)");   mapClass2Ext.put("Hmmer2(Hmmer)","hmm2");
		  mapFor2Class.put("format_3329","Hmmer3(Hmmer)");   mapClass2For.put("Hmmer3(Hmmer)","format_3329");
		  mapExt2Class.put("hmm3","Hmmer3(Hmmer)");   mapClass2Ext.put("Hmmer3(Hmmer)","hmm3");
		  mapExt2Class.put("hmmpress","HmmerPress(Binary)");   mapClass2Ext.put("HmmerPress(Binary)","hmmpress");
		  mapDat2Class.put("data_0863","Stockholm_1_0(Text)");   mapClass2Dat.put("Stockholm_1_0(Text)","data_0863");
		  mapFor2Class.put("format_1961","Stockholm_1_0(Text)");   mapClass2For.put("Stockholm_1_0(Text)","format_1961");
		  mapExt2Class.put("stockholm","Stockholm_1_0(Text)");   mapClass2Ext.put("Stockholm_1_0(Text)","stockholm");
		  mapExt2Class.put("xmfa","MauveXmfa(Text)");   mapClass2Ext.put("MauveXmfa(Text)","xmfa");
		  mapExt2Class.put("neostore","Neo4jDB(Neo4j, Data)");   mapClass2Ext.put("Neo4jDB(Neo4j, Data)","neostore");
		  mapExt2Class.put("neostore.zip","Neo4jDBzip(Neo4j, Data)");   mapClass2Ext.put("Neo4jDBzip(Neo4j, Data)","neostore.zip");
		  mapExt2Class.put("bowtie_color_index","BowtieColorIndex(BowtieIndex)");   mapClass2Ext.put("BowtieColorIndex(BowtieIndex)","bowtie_color_index");
		  mapExt2Class.put("bowtie_base_index","BowtieBaseIndex(BowtieIndex)");   mapClass2Ext.put("BowtieBaseIndex(BowtieIndex)","bowtie_base_index");
		  mapDat2Class.put("data_0863","Phylip(Text)");   mapClass2Dat.put("Phylip(Text)","data_0863");
		  mapFor2Class.put("format_1997","Phylip(Text)");   mapClass2For.put("Phylip(Text)","format_1997");
		  mapExt2Class.put("phylip","Phylip(Text)");   mapClass2Ext.put("Phylip(Text)","phylip");
		  mapExt2Class.put("smat","Smat(Text)");   mapClass2Ext.put("Smat(Text)","smat");
		  mapExt2Class.put("ptkscmp","PlantTribesKsComponents(Tabular)");   mapClass2Ext.put("PlantTribesKsComponents(Tabular)","ptkscmp");
		  mapDat2Class.put("data_2536","Wiff(Binary)");   mapClass2Dat.put("Wiff(Binary)","data_2536");
		  mapFor2Class.put("format_3710","Wiff(Binary)");   mapClass2For.put("Wiff(Binary)","format_3710");
		  mapExt2Class.put("wiff","Wiff(Binary)");   mapClass2Ext.put("Wiff(Binary)","wiff");
		  mapDat2Class.put("data_2536","PepXmlReport(Tabular)");   mapClass2Dat.put("PepXmlReport(Tabular)","data_2536");
		  mapExt2Class.put("pepxml.tsv","PepXmlReport(Tabular)");   mapClass2Ext.put("PepXmlReport(Tabular)","pepxml.tsv");
		  mapDat2Class.put("data_2536","ProtXmlReport(Tabular)");   mapClass2Dat.put("ProtXmlReport(Tabular)","data_2536");
		  mapExt2Class.put("protxml.tsv","ProtXmlReport(Tabular)");   mapClass2Ext.put("ProtXmlReport(Tabular)","protxml.tsv");
		  mapDat2Class.put("data_2536","ProteomicsXml(GenericXml)");   mapClass2Dat.put("ProteomicsXml(GenericXml)","data_2536");
		  mapFor2Class.put("format_2032","ProteomicsXml(GenericXml)");   mapClass2For.put("ProteomicsXml(GenericXml)","format_2032");
		  mapFor2Class.put("format_3655","PepXml(ProteomicsXml)");   mapClass2For.put("PepXml(ProteomicsXml)","format_3655");
		  mapExt2Class.put("pepxml","PepXml(ProteomicsXml)");   mapClass2Ext.put("PepXml(ProteomicsXml)","pepxml");
		  mapFor2Class.put("format_3244","MzML(ProteomicsXml)");   mapClass2For.put("MzML(ProteomicsXml)","format_3244");
		  mapExt2Class.put("mzml","MzML(ProteomicsXml)");   mapClass2Ext.put("MzML(ProteomicsXml)","mzml");
		  mapExt2Class.put("nmrml","NmrML(ProteomicsXml)");   mapClass2Ext.put("NmrML(ProteomicsXml)","nmrml");
		  mapExt2Class.put("protxml","ProtXML(ProteomicsXml)");   mapClass2Ext.put("ProtXML(ProteomicsXml)","protxml");
		  mapFor2Class.put("format_3654","MzXML(ProteomicsXml)");   mapClass2For.put("MzXML(ProteomicsXml)","format_3654");
		  mapExt2Class.put("mzxml","MzXML(ProteomicsXml)");   mapClass2Ext.put("MzXML(ProteomicsXml)","mzxml");
		  mapFor2Class.put("format_3245","MzData(ProteomicsXml)");   mapClass2For.put("MzData(ProteomicsXml)","format_3245");
		  mapExt2Class.put("mzdata","MzData(ProteomicsXml)");   mapClass2Ext.put("MzData(ProteomicsXml)","mzdata");
		  mapFor2Class.put("format_3247","MzIdentML(ProteomicsXml)");   mapClass2For.put("MzIdentML(ProteomicsXml)","format_3247");
		  mapExt2Class.put("mzid","MzIdentML(ProteomicsXml)");   mapClass2Ext.put("MzIdentML(ProteomicsXml)","mzid");
		  mapFor2Class.put("format_3246","TraML(ProteomicsXml)");   mapClass2For.put("TraML(ProteomicsXml)","format_3246");
		  mapExt2Class.put("traml","TraML(ProteomicsXml)");   mapClass2Ext.put("TraML(ProteomicsXml)","traml");
		  mapFor2Class.put("format_3248","MzQuantML(ProteomicsXml)");   mapClass2For.put("MzQuantML(ProteomicsXml)","format_3248");
		  mapExt2Class.put("mzq","MzQuantML(ProteomicsXml)");   mapClass2Ext.put("MzQuantML(ProteomicsXml)","mzq");
		  mapExt2Class.put("consensusxml","ConsensusXML(ProteomicsXml)");   mapClass2Ext.put("ConsensusXML(ProteomicsXml)","consensusxml");
		  mapExt2Class.put("featurexml","FeatureXML(ProteomicsXml)");   mapClass2Ext.put("FeatureXML(ProteomicsXml)","featurexml");
		  mapExt2Class.put("idxml","IdXML(ProteomicsXml)");   mapClass2Ext.put("IdXML(ProteomicsXml)","idxml");
		  mapFor2Class.put("format_3711","TandemXML(ProteomicsXml)");   mapClass2For.put("TandemXML(ProteomicsXml)","format_3711");
		  mapExt2Class.put("tandem","TandemXML(ProteomicsXml)");   mapClass2Ext.put("TandemXML(ProteomicsXml)","tandem");
		  mapExt2Class.put("uniprotxml","UniProtXML(ProteomicsXml)");   mapClass2Ext.put("UniProtXML(ProteomicsXml)","uniprotxml");
		  mapDat2Class.put("data_2536","Mgf(Text)");   mapClass2Dat.put("Mgf(Text)","data_2536");
		  mapFor2Class.put("format_3651","Mgf(Text)");   mapClass2For.put("Mgf(Text)","format_3651");
		  mapExt2Class.put("mgf","Mgf(Text)");   mapClass2Ext.put("Mgf(Text)","mgf");
		  mapDat2Class.put("data_2536","MascotDat(Text)");   mapClass2Dat.put("MascotDat(Text)","data_2536");
		  mapFor2Class.put("format_3713","MascotDat(Text)");   mapClass2For.put("MascotDat(Text)","format_3713");
		  mapExt2Class.put("mascotdat","MascotDat(Text)");   mapClass2Ext.put("MascotDat(Text)","mascotdat");
		  mapDat2Class.put("data_2536","ThermoRAW(Binary)");   mapClass2Dat.put("ThermoRAW(Binary)","data_2536");
		  mapFor2Class.put("format_3712","ThermoRAW(Binary)");   mapClass2For.put("ThermoRAW(Binary)","format_3712");
		  mapExt2Class.put("raw","ThermoRAW(Binary)");   mapClass2Ext.put("ThermoRAW(Binary)","raw");
		  mapExt2Class.put("msp","Msp(Text)");   mapClass2Ext.put("Msp(Text)","msp");
		  mapExt2Class.put("splib_noindex","SPLibNoIndex(Text)");   mapClass2Ext.put("SPLibNoIndex(Text)","splib_noindex");
		  mapExt2Class.put("splib","SPLib(Msp)");   mapClass2Ext.put("SPLib(Msp)","splib");
		  mapExt2Class.put("ms2","Ms2(Text)");   mapClass2Ext.put("Ms2(Text)","ms2");
		  mapExt2Class.put("hlf","XHunterAslFormat(Binary)");   mapClass2Ext.put("XHunterAslFormat(Binary)","hlf");
		  mapExt2Class.put("sf3","Sf3(Binary)");   mapClass2Ext.put("Sf3(Binary)","sf3");
		  mapFor2Class.put("format_3682","ImzML(Binary)");   mapClass2For.put("ImzML(Binary)","format_3682");
		  mapExt2Class.put("imzml","ImzML(Binary)");   mapClass2Ext.put("ImzML(Binary)","imzml");
		  mapExt2Class.put("analyze75","Analyze75(Binary)");   mapClass2Ext.put("Analyze75(Binary)","analyze75");
		  mapDat2Class.put("data_2048","QualityScore(data.Text)");   mapClass2Dat.put("QualityScore(data.Text)","data_2048");
		  mapFor2Class.put("format_3606","QualityScore(data.Text)");   mapClass2For.put("QualityScore(data.Text)","format_3606");
		  mapExt2Class.put("qual","QualityScore(data.Text)");   mapClass2Ext.put("QualityScore(data.Text)","qual");
		  mapFor2Class.put("format_3610","QualityScoreSOLiD(QualityScore)");   mapClass2For.put("QualityScoreSOLiD(QualityScore)","format_3610");
		  mapExt2Class.put("qualsolid","QualityScoreSOLiD(QualityScore)");   mapClass2Ext.put("QualityScoreSOLiD(QualityScore)","qualsolid");
		  mapFor2Class.put("format_3611","QualityScore454(QualityScore)");   mapClass2For.put("QualityScore454(QualityScore)","format_3611");
		  mapExt2Class.put("qual454","QualityScore454(QualityScore)");   mapClass2Ext.put("QualityScore454(QualityScore)","qual454");
		  mapFor2Class.put("format_3608","QualityScoreSolexa(QualityScore)");   mapClass2For.put("QualityScoreSolexa(QualityScore)","format_3608");
		  mapExt2Class.put("qualsolexa","QualityScoreSolexa(QualityScore)");   mapClass2Ext.put("QualityScoreSolexa(QualityScore)","qualsolexa");
		  mapFor2Class.put("format_3609","QualityScoreIllumina(QualityScore)");   mapClass2For.put("QualityScoreIllumina(QualityScore)","format_3609");
		  mapExt2Class.put("qualillumina","QualityScoreIllumina(QualityScore)");   mapClass2Ext.put("QualityScoreIllumina(QualityScore)","qualillumina");
		  mapExt2Class.put("fqtoc","SequenceSplitLocations(data.Text)");   mapClass2Ext.put("SequenceSplitLocations(data.Text)","fqtoc");
		  mapDat2Class.put("data_2044","Sequence(data.Text)");   mapClass2Dat.put("Sequence(data.Text)","data_2044");
		  mapDat2Class.put("data_0863","Alignment(data.Text)");   mapClass2Dat.put("Alignment(data.Text)","data_0863");
		  mapFor2Class.put("format_1929","Fasta(Sequence)");   mapClass2For.put("Fasta(Sequence)","format_1929");
		  mapExt2Class.put("fasta","Fasta(Sequence)");   mapClass2Ext.put("Fasta(Sequence)","fasta");
		  mapFor2Class.put("format_3589","csFasta(Sequence)");   mapClass2For.put("csFasta(Sequence)","format_3589");
		  mapExt2Class.put("csfasta","csFasta(Sequence)");   mapClass2Ext.put("csFasta(Sequence)","csfasta");
		  mapFor2Class.put("format_3823","Fastg(Sequence)");   mapClass2For.put("Fastg(Sequence)","format_3823");
		  mapExt2Class.put("fastg","Fastg(Sequence)");   mapClass2Ext.put("Fastg(Sequence)","fastg");
		  mapFor2Class.put("format_1930","BaseFastq(Sequence)");   mapClass2For.put("BaseFastq(Sequence)","format_1930");
		  mapExt2Class.put("fastq","BaseFastq(Sequence)");   mapClass2Ext.put("BaseFastq(Sequence)","fastq");
		  mapFor2Class.put("format_1930","Fastq(BaseFastq)");   mapClass2For.put("Fastq(BaseFastq)","format_1930");
		  mapExt2Class.put("fastq","Fastq(BaseFastq)");   mapClass2Ext.put("Fastq(BaseFastq)","fastq");
		  mapFor2Class.put("format_1932","FastqSanger(Fastq)");   mapClass2For.put("FastqSanger(Fastq)","format_1932");
		  mapExt2Class.put("fastqsanger","FastqSanger(Fastq)");   mapClass2Ext.put("FastqSanger(Fastq)","fastqsanger");
		  mapFor2Class.put("format_1933","FastqSolexa(Fastq)");   mapClass2For.put("FastqSolexa(Fastq)","format_1933");
		  mapExt2Class.put("fastqsolexa","FastqSolexa(Fastq)");   mapClass2Ext.put("FastqSolexa(Fastq)","fastqsolexa");
		  mapFor2Class.put("format_1931","FastqIllumina(Fastq)");   mapClass2For.put("FastqIllumina(Fastq)","format_1931");
		  mapExt2Class.put("fastqillumina","FastqIllumina(Fastq)");   mapClass2Ext.put("FastqIllumina(Fastq)","fastqillumina");
		  mapExt2Class.put("fastqcssanger","FastqCSSanger(Fastq)");   mapClass2Ext.put("FastqCSSanger(Fastq)","fastqcssanger");
		  mapFor2Class.put("format_3008","Maf(Alignment)");   mapClass2For.put("Maf(Alignment)","format_3008");
		  mapExt2Class.put("maf","Maf(Alignment)");   mapClass2Ext.put("Maf(Alignment)","maf");
		  mapExt2Class.put("mafcustomtrack","MafCustomTrack(data.Text)");   mapClass2Ext.put("MafCustomTrack(data.Text)","mafcustomtrack");
		  mapDat2Class.put("data_0863","Axt(data.Text)");   mapClass2Dat.put("Axt(data.Text)","data_0863");
		  mapFor2Class.put("format_3013","Axt(data.Text)");   mapClass2For.put("Axt(data.Text)","format_3013");
		  mapExt2Class.put("axt","Axt(data.Text)");   mapClass2Ext.put("Axt(data.Text)","axt");
		  mapDat2Class.put("data_0863","Lav(data.Text)");   mapClass2Dat.put("Lav(data.Text)","data_0863");
		  mapFor2Class.put("format_3014","Lav(data.Text)");   mapClass2For.put("Lav(data.Text)","format_3014");
		  mapExt2Class.put("lav","Lav(data.Text)");   mapClass2Ext.put("Lav(data.Text)","lav");
		  mapFor2Class.put("format_3466","RNADotPlotMatrix(data.Data)");   mapClass2For.put("RNADotPlotMatrix(data.Data)","format_3466");
		  mapExt2Class.put("rna_eps","RNADotPlotMatrix(data.Data)");   mapClass2Ext.put("RNADotPlotMatrix(data.Data)","rna_eps");
		  mapDat2Class.put("data_0880","DotBracket(Sequence)");   mapClass2Dat.put("DotBracket(Sequence)","data_0880");
		  mapFor2Class.put("format_1457","DotBracket(Sequence)");   mapClass2For.put("DotBracket(Sequence)","format_1457");
		  mapExt2Class.put("dbn","DotBracket(Sequence)");   mapClass2Ext.put("DotBracket(Sequence)","dbn");
		  mapFor2Class.put("format_1936","Genbank(data.Text)");   mapClass2For.put("Genbank(data.Text)","format_1936");
		  mapDat2Class.put("data_0849","Genbank(data.Text)");   mapClass2Dat.put("Genbank(data.Text)","data_0849");
		  mapExt2Class.put("genbank","Genbank(data.Text)");   mapClass2Ext.put("Genbank(data.Text)","genbank");
		  mapExt2Class.put("memepsp","MemePsp(Sequence)");   mapClass2Ext.put("MemePsp(Sequence)","memepsp");
		  mapExt2Class.put("None","MemePsp(Sequence)");   mapClass2Ext.put("MemePsp(Sequence)","None");
		  mapFor2Class.put("format_3475","TabularData(data.Text)");   mapClass2For.put("TabularData(data.Text)","format_3475");
		  mapFor2Class.put("format_2573","Sam(Tabular)");   mapClass2For.put("Sam(Tabular)","format_2573");
		  mapDat2Class.put("data_0863","Sam(Tabular)");   mapClass2Dat.put("Sam(Tabular)","data_0863");
		  mapExt2Class.put("sam","Sam(Tabular)");   mapClass2Ext.put("Sam(Tabular)","sam");
		  mapFor2Class.put("format_3015","Pileup(Tabular)");   mapClass2For.put("Pileup(Tabular)","format_3015");
		  mapExt2Class.put("pileup","Pileup(Tabular)");   mapClass2Ext.put("Pileup(Tabular)","pileup");
		  mapFor2Class.put("format_3016","BaseVcf(Tabular)");   mapClass2For.put("BaseVcf(Tabular)","format_3016");
		  mapExt2Class.put("vcf","Vcf(BaseVcf)");   mapClass2Ext.put("Vcf(BaseVcf)","vcf");
		  mapExt2Class.put("vcf_bgzip","VcfGz(BaseVcf, binary.Binary)");   mapClass2Ext.put("VcfGz(BaseVcf, binary.Binary)","vcf_bgzip");
		  mapExt2Class.put("_export.txt.gz","Eland(Tabular)");   mapClass2Ext.put("Eland(Tabular)","_export.txt.gz");
		  mapExt2Class.put("elandmulti","ElandMulti(Tabular)");   mapClass2Ext.put("ElandMulti(Tabular)","elandmulti");
		  mapExt2Class.put("fli","FeatureLocationIndex(Tabular)");   mapClass2Ext.put("FeatureLocationIndex(Tabular)","fli");
		  mapExt2Class.put("csv","CSV(BaseCSV)");   mapClass2Ext.put("CSV(BaseCSV)","csv");
		  mapExt2Class.put("tsv","TSV(BaseCSV)");   mapClass2Ext.put("TSV(BaseCSV)","tsv");
		  mapFor2Class.put("format_3309","ConnectivityTable(Tabular)");   mapClass2For.put("ConnectivityTable(Tabular)","format_3309");
		  mapExt2Class.put("ct","ConnectivityTable(Tabular)");   mapClass2Ext.put("ConnectivityTable(Tabular)","ct");
		  mapFor2Class.put("format_2331","Html(Text)");   mapClass2For.put("Html(Text)","format_2331");
		  mapExt2Class.put("html","Html(Text)");   mapClass2Ext.put("Html(Text)","html");
		  mapFor2Class.put("format_3464","Json(Text)");   mapClass2For.put("Json(Text)","format_3464");
		  mapExt2Class.put("json","Json(Text)");   mapClass2Ext.put("Json(Text)","json");
		  mapExt2Class.put("ipynb","Ipynb(Json)");   mapClass2Ext.put("Ipynb(Json)","ipynb");
		  mapExt2Class.put("biom1","Biom1(Json)");   mapClass2Ext.put("Biom1(Json)","biom1");
		  mapFor2Class.put("format_3746","Biom1(Json)");   mapClass2For.put("Biom1(Json)","format_3746");
		  mapDat2Class.put("data_0582","Obo(Text)");   mapClass2Dat.put("Obo(Text)","data_0582");
		  mapFor2Class.put("format_2549","Obo(Text)");   mapClass2For.put("Obo(Text)","format_2549");
		  mapExt2Class.put("obo","Obo(Text)");   mapClass2Ext.put("Obo(Text)","obo");
		  mapFor2Class.put("format_3581","Arff(Text)");   mapClass2For.put("Arff(Text)","format_3581");
		  mapExt2Class.put("arff","Arff(Text)");   mapClass2Ext.put("Arff(Text)","arff");
		  mapFor2Class.put("format_3624","SnpEffDb(Text)");   mapClass2For.put("SnpEffDb(Text)","format_3624");
		  mapExt2Class.put("snpeffdb","SnpEffDb(Text)");   mapClass2Ext.put("SnpEffDb(Text)","snpeffdb");
		  mapExt2Class.put("snpsiftdbnsfp","SnpSiftDbNSFP(Text)");   mapClass2Ext.put("SnpSiftDbNSFP(Text)","snpsiftdbnsfp");
		  mapExt2Class.put("iqtree","IQTree(Text)");   mapClass2Ext.put("IQTree(Text)","iqtree");
		  mapDat2Class.put("data_3002","GeneTrack(binary.Binary)");   mapClass2Dat.put("GeneTrack(binary.Binary)","data_3002");
		  mapFor2Class.put("format_2919","GeneTrack(binary.Binary)");   mapClass2For.put("GeneTrack(binary.Binary)","format_2919");
		  mapExt2Class.put("genetrack","GeneTrack(binary.Binary)");   mapClass2Ext.put("GeneTrack(binary.Binary)","genetrack");
		  mapExt2Class.put("trackhub","UCSCTrackHub(Html)");   mapClass2Ext.put("UCSCTrackHub(Html)","trackhub");
		  mapDat2Class.put("data_0582","Triples(data.Data)");   mapClass2Dat.put("Triples(data.Data)","data_0582");
		  mapFor2Class.put("format_2376","Triples(data.Data)");   mapClass2For.put("Triples(data.Data)","format_2376");
		  mapExt2Class.put("triples","Triples(data.Data)");   mapClass2Ext.put("Triples(data.Data)","triples");
		  mapFor2Class.put("format_3256","NTriples(data.Text, Triples)");   mapClass2For.put("NTriples(data.Text, Triples)","format_3256");
		  mapExt2Class.put("nt","NTriples(data.Text, Triples)");   mapClass2Ext.put("NTriples(data.Text, Triples)","nt");
		  mapFor2Class.put("format_3257","N3(data.Text, Triples)");   mapClass2For.put("N3(data.Text, Triples)","format_3257");
		  mapExt2Class.put("n3","N3(data.Text, Triples)");   mapClass2Ext.put("N3(data.Text, Triples)","n3");
		  mapFor2Class.put("format_3255","Turtle(data.Text, Triples)");   mapClass2For.put("Turtle(data.Text, Triples)","format_3255");
		  mapExt2Class.put("ttl","Turtle(data.Text, Triples)");   mapClass2Ext.put("Turtle(data.Text, Triples)","ttl");
		  mapFor2Class.put("format_3261","Rdf(xml.GenericXml, Triples)");   mapClass2For.put("Rdf(xml.GenericXml, Triples)","format_3261");
		  mapExt2Class.put("rdf","Rdf(xml.GenericXml, Triples)");   mapClass2Ext.put("Rdf(xml.GenericXml, Triples)","rdf");
		  mapFor2Class.put("format_3464","Jsonld(text.Json, Triples)");   mapClass2For.put("Jsonld(text.Json, Triples)","format_3464");
		  mapExt2Class.put("jsonld","Jsonld(text.Json, Triples)");   mapClass2Ext.put("Jsonld(text.Json, Triples)","jsonld");
		  mapFor2Class.put("format_2376","HDT(binary.Binary, Triples)");   mapClass2For.put("HDT(binary.Binary, Triples)","format_2376");
		  mapExt2Class.put("hdt","HDT(binary.Binary, Triples)");   mapClass2Ext.put("HDT(binary.Binary, Triples)","hdt");
		  mapFor2Class.put("format_2332","GenericXml(data.Text)");   mapClass2For.put("GenericXml(data.Text)","format_2332");
		  mapExt2Class.put("xml","GenericXml(data.Text)");   mapClass2Ext.put("GenericXml(data.Text)","xml");
		  mapExt2Class.put("memexml","MEMEXml(GenericXml)");   mapClass2Ext.put("MEMEXml(GenericXml)","memexml");
		  mapExt2Class.put("cisml","CisML(GenericXml)");   mapClass2Ext.put("CisML(GenericXml)","cisml");
		  mapDat2Class.put("data_0872","Phyloxml(GenericXml)");   mapClass2Dat.put("Phyloxml(GenericXml)","data_0872");
		  mapFor2Class.put("format_3159","Phyloxml(GenericXml)");   mapClass2For.put("Phyloxml(GenericXml)","format_3159");
		  mapExt2Class.put("phyloxml","Phyloxml(GenericXml)");   mapClass2Ext.put("Phyloxml(GenericXml)","phyloxml");
		  mapFor2Class.put("format_3262","Owl(GenericXml)");   mapClass2For.put("Owl(GenericXml)","format_3262");
		  mapExt2Class.put("owl","Owl(GenericXml)");   mapClass2Ext.put("Owl(GenericXml)","owl");
		  mapExt2Class.put("sbml","Sbml(GenericXml)");   mapClass2Ext.put("Sbml(GenericXml)","sbml");
		  mapDat2Class.put("data_2024","Sbml(GenericXml)");   mapClass2Dat.put("Sbml(GenericXml)","data_2024");
		  mapFor2Class.put("format_2585","Sbml(GenericXml)");   mapClass2For.put("Sbml(GenericXml)","format_2585");

		  
		  mapClass2Class.putAll( mapClass2For);
		  mapClass2Class.putAll( mapClass2Dat);
		  mapClass2Class.putAll( mapClass2Ext);
		  return mapAll;
	  }
}
