{"swaggerVersion":"1.2","apiVersion":"1.0","basePath":"http://localhost:8080/iric_portal/ws","resourcePath":"",
"apis":[

{"path":"/variety","description":"API's to query variety related data","operations":[{"nickname":"GET - getVarieties","method":"GET","summary":"All varieties", "notes":"Gets all variety objects", "type":"string","produces":["application/json"]}]},
{"path":"/variety/{id}","description":"","operations":[{"nickname":"GET - getVarietiesById","method":"GET","summary":"Variety details", "notes":"Gets variety details for varid","type":"string","produces":["application/json"],"parameters":[{"name":"id","paramType":"path","allowMultiple":false,"required":true,"type":"long"}]}]},
{"path":"/variety/subpopulation/{subpop}","description":"","operations":[{"nickname":"GET - getVarietiesBySubpopulation","method":"GET","summary":"Varieties in subpopulation", "notes":"Gets varieties in the subpopulation","type":"string","produces":["application/json"],"parameters":[{"name":"subpop","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},
{"path":"/variety/subpopulation","description":"","operations":[{"nickname":"GET - getVarietiesSubpopulation","method":"GET","summary":"Subpopulations", "notes":"Gets all subpopulations","type":"string","produces":["application/json"]}]},
{"path":"/variety/country/{country}","description":"","operations":[{"nickname":"GET - getVarietiesByCountry","method":"GET","summary":"Varieties from country", "notes":"Gets all varieties from country","type":"string","produces":["application/json"],"parameters":[{"name":"country","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},
{"path":"/variety/country","description":"","operations":[{"nickname":"GET - getVarietiesCountry","method":"GET","summary":"Countries", "notes":"Gets all countries","type":"string","produces":["application/json"]}]},
{"path":"/variety/name","description":"","operations":[{"nickname":"GET - getVarietiesNames","method":"GET","summary":"Variety names", "notes":"Gets all variety names","type":"string","produces":["application/json"]}]},
{"path":"/variety/namelike/{name}","description":"","operations":[{"nickname":"GET - getVarietiesNameLike","method":"GET","summary":"Variety names like", "notes":"Gets all varieties with names using wildcard *name*","type":"string","produces":["application/json"],"parameters":[{"name":"name","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},

{"path":"/variety/phenotypes","description":"","operations":[{"nickname":"GET - getPhenotypes","method":"GET","summary":"All phenotypes", "notes":"Gets all phenotype names and IDs" ,"type":"string","produces":["application/json"]}]},
{"path":"/variety/phenotypes/{phenid}","description":"","operations":[{"nickname":"GET - getPhenotype4AllVarieties","method":"GET","summary":"Phenotype values", "notes":"Gets value for phenid in all varieties","type":"string","produces":["application/json"],"parameters":[{"name":"phenid","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},
{"path":"/variety/{varid}/phenotypes","description":"","operations":[{"nickname":"GET - getVarietyAllPhenotypes","method":"GET","summary":"All phenotypes and values for variety", "notes":"Gets all phenotypes and values for varid","type":"string","produces":["application/json"],"parameters":[{"name":"varid","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},
{"path":"/variety/{varid}/phenotypes/{phenid}","description":"","operations":[{"nickname":"GET - getVarietyPhenotype","method":"GET","summary":"Phenotype value for variety", "notes":"Get phenotype phenId value for varid","type":"string","produces":["application/json"],"parameters":[{"name":"varid","paramType":"path","allowMultiple":false,"required":true,"type":"string"}, {"name":"phenid","paramType":"path","allowMultiple":false,"required":true,"type":"string"} ]}]},
{"path":"/variety/all/phenotypes/{phenid}","description":"","operations":[{"nickname":"GET - getVarietyPhenotype","method":"GET","summary":"Phenotype value for all varieties", "notes":"Get phenotype values for all varieties","type":"string","produces":["application/json"],"parameters":[{"name":"phenid","paramType":"path","allowMultiple":false,"required":true,"type":"string"} ]}]},

{"path":"/variety/COterms","description":"","operations":[{"nickname":"GET - getCoTerms","method":"GET","summary":"All rice ontologies", "notes":"Gets all CO Term Names" ,"type":"string","produces":["application/json"]}]},
{"path":"/variety/COterms/{coTerm}","description":"","operations":[{"nickname":"GET - getCOTerm4AllVarities","method":"GET","summary":"Ontology terms", "notes":"Gets value for coterms in all varieties","type":"string","produces":["application/json"],"parameters":[{"name":"coTerm","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},
{"path":"/variety/{varid}/COterms/{coTerm}","description":"","operations":[{"nickname":"GET - getVarietyCOTerm","method":"GET","summary":"CO Term value for variety", "notes":"Get coterms value for varid","type":"string","produces":["application/json"],"parameters":[{"name":"varid","paramType":"path","allowMultiple":false,"required":true,"type":"string"}, {"name":"coTerm","paramType":"path","allowMultiple":false,"required":true,"type":"string"} ]}]},
{"path":"/variety/all/COterms/{coTerm}","description":"","operations":[{"nickname":"GET - getAllVarietyCOterm","method":"GET","summary":"CO Term for all varieties", "notes":"Get coterms for all varieties","type":"string","produces":["application/json"],"parameters":[{"name":"coTerm","paramType":"path","allowMultiple":false,"required":true,"type":"string"} ]}]},

{"path":"/variety/passports","description":"","operations":[{"nickname":"GET - getPassports","method":"GET","summary":"All passports", "notes":"Gets all passport fields and IDs","type":"string","produces":["application/json"]}]},
{"path":"/variety/{varid}/passports","description":"","operations":[{"nickname":"GET - getVarietyPassports","method":"GET","summary":"Variety passports", "notes":"Gets all passport data for varid","type":"string","produces":["application/json"],"parameters":[{"name":"varid","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},
{"path":"/variety/passports/{passid}","description":"","operations":[{"nickname":"GET - getPassport4AllVarieties","method":"GET","summary":"Passport data", "notes":"Gets all passport field and values for varid","type":"string","produces":["application/json"],"parameters":[{"name":"passid","paramType":"path","allowMultiple":false,"required":true,"type":"string"}]}]},


{"path":"/genomics/gene/osnippo/{contig}","description":"","operations":[{"nickname":"GET - getGeneByRegion","method":"GET","summary":"Passport data", "notes":"Gets Niponbare genes within region","type":"string","produces":["application/json"],"parameters":[{"name":"contig","paramType":"path","allowMultiple":false,"required":true,"type":"string", "description":"contig (ex. chr01)"}, {"name":"start","paramType":"query","allowMultiple":false,"required":true,"type":"long", "description":"start bp position"}, {"name":"end","paramType":"query","allowMultiple":false,"required":true,"type":"long", "description":"end bp position"}, {"name":"model","paramType":"query","allowMultiple":false,"required":false,"type":"String", "description":"gene model [msu7 (default),rap,iric]"} ]    }]},


{"path":"/genotype/gettable","description":"","operations":[{"nickname":"GET - getVariantByVarietyId","method":"GET","summary":"Genotype table", "notes":"Gets SNP/Indels genotype table (for large list of variety IDs or positions, use /genotype/posttable). Required for region: (chr,start,end) or locus or poslist.  Required for variety: Defaults to all varieties or specify varid or subpopulation. Set at least one of SNP, Indel to true","type":"string","produces":["application/json"],"parameters":[{"name":"varid", "description":"Returns only varieties in list of IDs (comma separated)"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"chr", "description":"Contig name (ex. chr01)"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"start", "description":"Start bp position"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"long"},{"name":"end", "description":"End bp position"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"long"},{"name":"snp", "description":"Query SNPs"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"boolean"},{"name":"indel", "description":"Query indels"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"boolean"},{"name":"coreonly", "description":"Query core SNPs only"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"boolean"},{"name":"mismatchonly", "description":"Returns only varieties with mismatch"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"boolean"},{"name":"poslist", "description":"List of bp positions (comma separated)"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"subpopulation", "description":"Returns only varieties in subpopulation"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"locus", "description":"Query in locus region (MSU7 locus names)"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"alignindels", "description":"Show indels as aligned sequences, starting at anchor position"  ,"paramType":"query","allowMultiple":false,"required":false,"type":"boolean"}]}]},
{"path":"/genotype/posttable","description":"","operations":[{"nickname":"POST - postVariantByVarietyId","method":"POST","summary":"Genotype table", "notes":"Gets SNP/Indels genotype table (use for large list of variety IDs or positions)","type":"string","produces":["application/json"],"parameters":[{"name":"body", "description":""  ,"paramType":"body","allowMultiple":false,"description":"Request body","required":true,"type":"string"}]}]},

{"path":"/blast/getblast","description":"","operations":[{"nickname":"GET - getBlast","method":"GET","summary":"BLAST", "notes":"BLAST the five reference rice genomes (for long sequence, use /blast/postblast)","type":"string","produces":["application/json"],"parameters":[{"name":"sequence", "description":"Nucleotide or protein sequence" ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"program", "description":"BLAST program to use (blastn, plastp, blastx, tblastn, tblastx)" ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"db", "description":"Database to query (9311v1cdna, 9311v1cds, 9311v1dna, 9311v1up3k, 9311v1pep, dj123v1cdna, dj123v1cds, dj123v1dna, dj123v1up3k, dj123v1pep, ir6421v1cdna, ir6421v1cds, ir6421v1dna, ir6421v1up3k, ir6421v1pep, kasrapv1cdna, kasrapv1cds, kasrapv1dna, kasrapv1up3k, kasrapv1pep, msu7cdna, msu7cds, msu7dna, msu7pep). The prefix refers to reference genome (9311, DJ123, IR64-21, Kasalath using RAP annotation, MSU v7).  The suffix refers to cdna: locus, cds: coding sequence, dna: genome, up3k: 3k upstream of locus, pep: translated polypeptide." ,"paramType":"query","allowMultiple":false,"required":false,"type":"string"},{"name":"maxe", "description":"Maximum E-value (default 10)" ,"paramType":"query","allowMultiple":false,"required":false,"type":"double"}]}]},
{"path":"/blast/postblast","description":"","operations":[{"nickname":"POST - postBlast","method":"POST","summary":"BLAST", "notes":"BLAST the five reference rice genomes (use for long sequence)","type":"string","produces":["application/json"],"parameters":[{"name":"body", "description":"" ,"paramType":"body","allowMultiple":false,"description":"Request body","required":true,"type":"string"}]}]} 

]}